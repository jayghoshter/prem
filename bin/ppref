#!/usr/bin/env python3

from ptdpy import PDF, CrossRef
from ptdpy.utils import extract_from_crossref_metadata
import argparse
import re
from pyfzf.pyfzf import FzfPrompt
import plumbum
import click

doi_regex = r'10.\d{4,9}/[A-Za-z0-9./:;()\-_]+'

def driver(fname):
    pdf = PDF(fname, engine='pikepdf')
    dois_in_mdata = re.compile(doi_regex).findall(" ".join(pdf.metadata.values()))
    cr = CrossRef()

    fzf = FzfPrompt()
    FZF_FILE_OPTS =  '--cycle --bind="ctrl-x:execute@xdg-open {}@" --bind="ctrl-y:execute@echo {} | xclip -i -selection clipboard@"'
    
    if dois_in_mdata: 
        doi = dois_in_mdata[0]
        mdata = cr.fetch_by_doi(doi)
        mdata = extract_from_crossref_metadata(mdata)

        pdf.metadata.update(mdata)
        outfname = f"{mdata['Year']} - {mdata['Author']} - {mdata['Title']}.pdf"
        pdf.rename(outfname)
    else:
        text = pdf.pages_to_text(3)
        querystr = click.edit(text)
        if querystr: 
            crossref_matches = cr.query(querystr)
            crossref_matches_processed = list(map(extract_from_crossref_metadata, crossref_matches))
            crossref_identifiers = list(map(lambda x: f"{x['Year']} - {x['Author']} - {x['Title']}", crossref_matches_processed))
            selected = fzf.prompt(crossref_identifiers, FZF_FILE_OPTS)
            if selected:
                selected = selected[0]
                selected_index = crossref_identifiers.index(selected)
                pdf.metadata.update( crossref_matches_processed[selected_index] )
                pdf.rename(selected + '.pdf')

def main():

    ap = argparse.ArgumentParser()

    ap.add_argument("files", nargs = '*', help="PDF files to operate on")

    args = ap.parse_args()

    for current_file in args.files: 
        driver(current_file)

if __name__ == "__main__": 
    main()
